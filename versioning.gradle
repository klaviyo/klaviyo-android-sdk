import javax.xml.parsers.DocumentBuilderFactory
import static de.fayard.refreshVersions.core.Versions.versionFor

/**
 * Command to bump the version of the project
 * including updating README and documentation references
 *
 * Usage: ./gradlew bumpVersion --nextVersion=<new_version>
 */
class BumpVersion extends DefaultTask {
    private String nextVersion;

    @Option(option = "nextVersion", description = "New version number, tag or commit.")
    void setNextVersion(String nextVersion) {
        this.nextVersion = nextVersion;
    }

    @Input
    String getNextVersion() {
        return nextVersion;
    }

    static String readXmlValue(String filePath, String tagName) {
        def xmlFile = new File(filePath)
        if (!xmlFile.exists()) {
            throw new FileNotFoundException("File not found: $filePath")
        }

        def factory = DocumentBuilderFactory.newInstance()
        def builder = factory.newDocumentBuilder()
        def document = builder.parse(xmlFile)

        def nodeList = document.getElementsByTagName(tagName)
        if (nodeList.length > 0) {
            return nodeList.item(0).getTextContent()
        }
        return ""
    }

    @TaskAction
    void bumpVersion() {
        def currentVersion = readXmlValue('sdk/core/src/main/res/values/strings.xml', 'klaviyo_sdk_version_override')
        def nextVersion = this.getNextVersion()
        def currentBuild = versionFor(project, "version.klaviyo.versionCode") as Integer
        def nextBuild = currentBuild + 1
        print("Changing semantic version number from $currentVersion to $nextVersion\n")
        print("Auto-incrementing version code from $currentBuild to $nextBuild\n")

        ant.replace(file: "versions.properties", token: "versionCode=$currentBuild", value: "versionCode=$nextBuild")
        def file = new File('sdk/core/src/main/res/values/strings.xml')
        def newName = file.text.replace(currentVersion, nextVersion)
        file.text = newName
        ant.replace(file: "README.md", token: "analytics:$currentVersion", value: "analytics:$nextVersion")
        ant.replace(file: "README.md", token: "push-fcm:$currentVersion", value: "push-fcm:$nextVersion")
        ant.replace(file: "README.md", token: "forms:$currentVersion", value: "forms:$nextVersion")
        ant.replace(file: "docs/index.html", token: "$currentVersion", value: "$nextVersion")
    }
}

tasks.register("bumpVersion", BumpVersion)