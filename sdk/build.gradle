subprojects {
    def ext = rootProject.ext

    apply plugin: "com.android.library"
    apply plugin: "kotlin-android"
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "org.jetbrains.dokka"
    apply plugin: "maven-publish"

    android {
        compileSdkVersion ext.androidCompileVersion
        buildToolsVersion ext.buildToolsVersion

        def localProperties = new Properties()
        if (rootProject.file("local.properties").canRead()) {
            localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        }
        def serverTarget = localProperties['localKlaviyoServerUrl'] ?: klaviyoServerUrl

        defaultConfig {
            minSdkVersion ext.minSDKVersion
            targetSdkVersion ext.targetSDKVersion
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            versionCode ext.versionCode
            versionName ext.versionName
        }

        buildFeatures {
            buildConfig = true
        }

        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_17
            targetCompatibility = JavaVersion.VERSION_17
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                buildConfigField "String", "KLAVIYO_SERVER_URL", "\"${serverTarget}\""
                buildConfigField "String", "VERSION", "\"${ext.versionName}\""
            }
            debug {
                debuggable = true
                buildConfigField "String", "KLAVIYO_SERVER_URL", "\"${serverTarget}\""
                buildConfigField "String", "VERSION", "\"${ext.versionName}\""
            }
        }

        testOptions {
            unitTests.all {
                // JVM Arguments required for various unit test mocks via Mockk as of Java 17
                jvmArgs(
                        "--add-opens", "java.base/java.lang=ALL-UNNAMED",
                        "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED",
                        "--add-opens", "java.base/java.net=ALL-UNNAMED",
                        "--add-opens", "java.base/javax.net.ssl=ALL-UNNAMED",
                        "--add-opens", "java.base/sun.net.www.protocol.https=ALL-UNNAMED",
                        "--add-exports", "java.base/sun.net.www.protocol.https=ALL-UNNAMED",
                )
            }
        }
    }

    dependencies {
        /***** Main Dependencies *****/
        //Kotlin Dependencies
        implementation AndroidX.core.ktx
        implementation Kotlin.stdlib.jdk8

        /***** Instrumentation Testing Dependencies *****/
        androidTestImplementation AndroidX.test.runner
        androidTestImplementation AndroidX.test.espresso.core
    }

    ktlint {
        verbose = true
        android = true
        ignoreFailures = false
        outputToConsole = true
        outputColorName = "RED"
        disabledRules = ["max-line-length"]
        filter {
            exclude("**/generated/**")
            include("**/kotlin/**")
            include("**/java/**")
        }
    }

    dokkaHtmlPartial {
        dokkaSourceSets {
            configureEach {
                includeNonPublic.set(false)
                reportUndocumented.set(true)
                skipEmptyPackages.set(true)
                suppressInheritedMembers.set(true)

                jdkVersion.set(17)
            }
        }
    }
}
