# Workflow for running Android instrumented tests across multiple API levels
# Runs on master, release branches, and PRs with specific labels

name: Instrumented Tests

# Trigger conditions
on:
  # Run on pushes to main branches
  push:
    branches:
      - 'master'
      - 'rel/*'
  
  # Run on PRs when specific labels are added or when labeled PRs are updated
  pull_request:
    types: [ labeled, synchronize ]
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      api_level:
        description: 'Specific API level to test (optional, defaults to matrix)'
        required: false
        type: string
      arch:
        description: 'Architecture (x86 or x86_64, optional, defaults based on API level)'
        required: false
        type: string

jobs:
  # Job to check if we should run instrumented tests on PRs
  check-pr-labels:
    name: Label Check
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    outputs:
      should-run: ${{ steps.check.outputs.result }}
    steps:
      - name: Check for instrumented test labels
        id: check
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const labels = context.payload.pull_request.labels.map(label => label.name);
            const testLabels = ['test:instrumented', 'test:all'];
            const hasTestLabel = testLabels.some(label => labels.includes(label));
            
            console.log(`Labels: ${labels.join(', ')}`);
            console.log(`Has test label: ${hasTestLabel}`);
            
            return hasTestLabel ? 'true' : 'false';

  # Main instrumented tests job
  instrumented-tests:
    name: ${{ matrix.api-level && format('API {0}', matrix.api-level) || 'Instrumented Tests' }}
    runs-on: ubuntu-22.04

    # Run if: push to branches OR PR with correct labels OR manual dispatch
    if: |
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && needs.check-pr-labels.outputs.should-run == 'true')

    needs: [ check-pr-labels ]
    # Allow check-pr-labels to be skipped for non-PR events
    continue-on-error: false

    strategy:
      fail-fast: false
      matrix: ${{ github.event_name != 'workflow_dispatch' && fromJSON('{"include":[{"api-level":23,"arch":"x86"},{"api-level":36,"arch":"x86_64"}]}') || fromJSON('{"include":[{}]}') }}

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Setup Android Build Environment
        uses: ./.github/actions/setup
        with:
          google-services-json: ${{secrets.GOOGLE_SERVICES_JSON}}

      - name: Configure local.properties for instrumented tests
        run: |
          echo "klaviyoPublicApiKey=$INSTRUMENTED_TEST_PUBLIC_API_KEY" >> local.properties
        env:
          INSTRUMENTED_TEST_PUBLIC_API_KEY: ${{secrets.INSTRUMENTED_TEST_PUBLIC_API_KEY}}

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Use manual API level and arch if specified in workflow_dispatch, otherwise use matrix
      - name: Set API Level and Architecture
        id: api-setup
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ inputs.api_level }}" ]; then
            echo "api_level=${{ inputs.api_level }}" >> $GITHUB_OUTPUT
            # Use provided arch, or default based on API level
            if [ -n "${{ inputs.arch }}" ]; then
              echo "arch=${{ inputs.arch }}" >> $GITHUB_OUTPUT
            elif [ "${{ inputs.api_level }}" -lt 24 ]; then
              echo "arch=x86" >> $GITHUB_OUTPUT
            else
              echo "arch=x86_64" >> $GITHUB_OUTPUT
            fi
          else
            echo "api_level=${{ matrix.api-level }}" >> $GITHUB_OUTPUT
            echo "arch=${{ matrix.arch }}" >> $GITHUB_OUTPUT
          fi

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ steps.api-setup.outputs.api_level }}-${{ steps.api-setup.outputs.arch }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ steps.api-setup.outputs.api_level }}
          arch: ${{ steps.api-setup.outputs.arch }}
          target: ${{ steps.api-setup.outputs.api_level >= 30 && 'google_apis' || 'default' }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ steps.api-setup.outputs.api_level }}
          arch: ${{ steps.api-setup.outputs.arch }}
          target: ${{ steps.api-setup.outputs.api_level >= 30 && 'google_apis' || 'default' }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            echo "Running instrumented tests on API ${{ steps.api-setup.outputs.api_level }}"
            ./gradlew :sample:connectedAndroidTest --stacktrace --no-daemon
            echo "Instrumented tests completed"

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-api-${{ steps.api-setup.outputs.api_level }}-${{ steps.api-setup.outputs.arch }}
          path: |
            sample/build/reports/androidTests/connected/
            sample/build/outputs/androidTest-results/
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-api-${{ steps.api-setup.outputs.api_level }}-${{ steps.api-setup.outputs.arch }}
          path: sample/build/test-results/
          retention-days: 7

      - name: Send Slack notification on push failure
        if: failure() && github.event_name == 'push'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "ðŸš¨ Instrumented Tests Failed on ${{ github.ref_name }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "ðŸš¨ Instrumented Tests Failed\n"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Repository:* ${{ github.repository }}\n*Branch:* `${{ github.ref_name }}`\n*API Level:* ${{ steps.api-setup.outputs.api_level }}\n*Architecture:* ${{ steps.api-setup.outputs.arch }}\n*Commit:* `${{ github.sha }}`\n*Author:* ${{ github.actor }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Workflow Run:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"