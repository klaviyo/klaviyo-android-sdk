# A workflow for controlling the actions taken by CI whenever we merge code into master

name: Android SDK Master CI

# Triggers the workflow on when code is merged into master
on:
  push:
    branches:
      - 'master'

jobs:
  # A job for running our tests
  test:
    name: Run Unit Tests

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        module: [ ':sdk:core', ':sdk:analytics', ':sdk:forms', ':sdk:push-fcm', ':sample' ]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v4

      # Sets up a JDK on the job so that we can run Java code
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          java-package: jdk

      # Call Gradle to run the unit tests
      - name: Unit Tests
        run: ./gradlew ${{ matrix.module }}:test --stacktrace --no-daemon

  # A job for running linters (ktlint + Android Lint)
  lint:
    name: Run Linters

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v4

      # Sets up a JDK on the job so that we can run Java code
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          java-package: jdk

      # Call Gradle to run ktlint check
      - name: Ktlint Check
        run: ./gradlew ktlintCheck --no-daemon

      # Call Gradle to run Android Lint
      - name: Android Lint
        run: ./gradlew lintRelease --no-daemon

  # Another job for building our SDK's AAR file
  aar:
    name: Generate AAR
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v4

      # Sets up a JDK on the job so that we can run Java code
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          java-package: jdk

      # Call Gradle to build our debug AAR
      - name: Build debug AAR
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      # Stores the generated AAR to an outputs folder
      - name: Store AAR
        uses: actions/upload-artifact@v4
        with:
          name: sdk
          path: app/build/outputs/aar/debug/aar-debug.aar
          overwrite: true
